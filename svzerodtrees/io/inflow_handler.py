import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import trapz
import scipy
import sys
from .blocks import BoundaryCondition

class Inflow():
    '''
    a class to handle inflow for pulmonary trees
    '''
    def __init__(self, q: list, t: list, t_per=1.0, n_periods=1, name="INFLOW"):
        '''
        initialize the inflow object

        :param q: the flow rate
        :param t: the time points
        '''

        self.q = q
        if type(t) is np.ndarray:
            self.t = t.tolist()
        else:
            self.t = t
        self.dt = t[1] - t[0]
        self.t_per = t_per
        self.n_periods = n_periods
        self.n_tsteps = len(t)
        self.name = name
    

    @classmethod
    def periodic(cls, path=None, t_per=1.0, n_periods=1, flip_sign=False, name="INFLOW"):
        '''
        create a periodic inflow
        '''
    
       #  with open(path) as ff:
        if path is None:
            print('creating a generic inflow profile')
            inflow = pd.DataFrame({
                't': np.linspace(0, t_per, 512),
                'q': [
                        4.807005986876029,
                        5.364473627978368,
                        6.404229228676166,
                        7.621505825736108,
                        8.757202729588798,
                        9.817790158580648,
                        10.988238829303917,
                        12.385507304868606,
                        13.942179904058555,
                        15.519666363468252,
                        17.080785868861508,
                        18.71383045118677,
                        20.504426788646,
                        22.42959225360211,
                        24.396778283735,
                        26.360711171367406,
                        28.366370296013237,
                        30.47581911818077,
                        32.68391874517787,
                        34.92876925674606,
                        37.17240691618321,
                        39.44168234939754,
                        41.781008033938676,
                        44.18598300691702,
                        46.605939369746615,
                        49.007744925510856,
                        51.41390686284077,
                        53.86617674366127,
                        56.365220810429754,
                        58.86586512490899,
                        61.332208355082415,
                        63.77950939254804,
                        66.24976670442497,
                        68.75489993855354,
                        71.26081629948573,
                        73.72974991940052,
                        76.16372061632222,
                        78.5947450242413,
                        81.03899452223277,
                        83.4764414180024,
                        85.8796651836137,
                        88.24979626971044,
                        90.61118673848716,
                        92.97420747016989,
                        95.3180752840624,
                        97.61705057165297,
                        99.87411092563323,
                        102.11616226061433,
                        104.35658727645276,
                        106.57478282700248,
                        108.7401380207547,
                        110.84946249369777,
                        112.92926052405994,
                        115.00001899364071,
                        117.04848865332687,
                        119.04274284731628,
                        120.96953720557393,
                        122.84625553204694,
                        124.69413140085415,
                        126.50889558346921,
                        128.2658224999482,
                        129.95001267992194,
                        131.5713736977869,
                        133.14646144765163,
                        134.67348305028213,
                        136.133791724257,
                        137.5161097245788,
                        138.82962782488204,
                        140.08854541530843,
                        141.28984072363502,
                        142.41492262588835,
                        143.4531647793468,
                        144.41568119846187,
                        145.32071668728545,
                        146.16985328565568,
                        146.9463158947989,
                        147.63732184246064,
                        148.25097020788883,
                        148.80597437430973,
                        149.30849879870502,
                        149.74666829183874,
                        150.10917560133134,
                        150.40265187498576,
                        150.64498123699173,
                        150.84417505297506,
                        150.99117445051348,
                        151.07569072459026,
                        151.10342340395326,
                        151.0917200377576,
                        151.04990232404597,
                        150.97069499607807,
                        150.84385203703303,
                        150.67333121610093,
                        150.47504570964992,
                        150.25856227967031,
                        150.0174802209814,
                        149.7412232729295,
                        149.4321283585606,
                        149.1047712691101,
                        148.76847408368116,
                        148.41652872686925,
                        148.0366511245626,
                        147.62875132628872,
                        147.20627710617237,
                        146.77921213183137,
                        146.34119119021145,
                        145.87778860063452,
                        145.3851208273269,
                        144.87443561816724,
                        144.35691321394174,
                        143.82875050689788,
                        143.27580289965948,
                        142.6911911275552,
                        142.08269325577913,
                        141.460835905906,
                        140.82405459518054,
                        140.1604335541573,
                        139.4629590479883,
                        138.73749608182194,
                        137.9931417851484,
                        137.22857997802737,
                        136.43322145796503,
                        135.6016207994159,
                        134.74146462396337,
                        133.86387384536366,
                        132.96857317883521,
                        132.04376679781706,
                        131.08141921746176,
                        130.08831164036093,
                        129.07856457490723,
                        128.0572792529967,
                        127.01617557035644,
                        125.94624780205514,
                        124.85065443258827,
                        123.74159721334121,
                        122.62626103037097,
                        121.5005308434552,
                        120.357866514538,
                        119.20044765007358,
                        118.03757591687311,
                        116.87432104726396,
                        115.70662444455904,
                        114.52977525348528,
                        113.34839771952493,
                        112.17360934895473,
                        111.0103721212267,
                        109.85183289693487,
                        108.68880791770857,
                        107.52266154196138,
                        106.3650240296428,
                        105.22460344779914,
                        104.09781988632172,
                        102.97476264390922,
                        101.85223457890051,
                        100.73720721900868,
                        99.6372083350403,
                        98.55095067037075,
                        97.471047943592,
                        96.39399823001098,
                        95.32353945354721,
                        94.26353592131096,
                        93.21116521355384,
                        92.16024095700554,
                        91.10980213508641,
                        90.06535659712871,
                        89.03033178670695,
                        87.99938291578069,
                        86.96346168868378,
                        85.92069028720567,
                        84.8785151678703,
                        83.84352305192178,
                        82.81171072348069,
                        81.77199740352145,
                        80.71885227321448,
                        79.65808527502344,
                        78.5986515477589,
                        77.54122107259343,
                        76.47791267904528,
                        75.40262102997154,
                        74.31785440722221,
                        73.22954914302105,
                        72.1378465036257,
                        71.0368638489883,
                        69.92357568231573,
                        68.80300765753819,
                        67.68188502558498,
                        66.55904986763922,
                        65.42613391893966,
                        64.27852183831223,
                        63.122335839666015,
                        61.96760597582663,
                        60.81578784956772,
                        59.657697589963206,
                        58.48489955424009,
                        57.300298035434196,
                        56.11467917536076,
                        54.933936860525975,
                        53.753267179918744,
                        52.56498188235906,
                        51.368889618962335,
                        50.17171051984295,
                        48.97734753685832,
                        47.78200053138643,
                        46.58086211644384,
                        45.3767338976574,
                        44.17796472000204,
                        42.98786539627356,
                        41.800116633149095,
                        40.60734596426166,
                        39.41222841327323,
                        38.226132483417956,
                        37.056106214856676,
                        35.896604593965094,
                        34.736974030356045,
                        33.57569492988201,
                        32.42352031161748,
                        31.291593719695314,
                        30.17954775655987,
                        29.078248197228778,
                        27.983022280565955,
                        26.90033771626257,
                        25.840131619669446,
                        24.80459038580999,
                        23.787881946604106,
                        22.7861644559665,
                        21.803864475683106,
                        20.848120504425275,
                        19.91971010999007,
                        19.013306194081096,
                        18.126713600320514,
                        17.266075600728712,
                        16.439302835384716,
                        15.646142302791729,
                        14.8784100230656,
                        14.130713171596604,
                        13.407901951056889,
                        12.71941993767304,
                        12.067726413420404,
                        11.445673444303974,
                        10.845984191713159,
                        10.270300819259901,
                        9.726206083322658,
                        9.216629011819034,
                        8.735801462037847,
                        8.276780107340908,
                        7.840067775089805,
                        7.431751495068504,
                        7.05398258443376,
                        6.700951476065743,
                        6.365900361834594,
                        6.049600345749141,
                        5.75861112940856,
                        5.495448624922904,
                        5.253885465150283,
                        5.0259245795210035,
                        4.811346405159814,
                        4.617118914698926,
                        4.447357150993656,
                        4.297111856768999,
                        4.158211374204119,
                        4.029363109019291,
                        3.917086746126959,
                        3.8263082299479096,
                        3.7532207892710554,
                        3.689933554392662,
                        3.6346386650145823,
                        3.5936587168550944,
                        3.57262794829349,
                        3.568620877726935,
                        3.5737794455374647,
                        3.585593178500455,
                        3.610065643746826,
                        3.653504014983459,
                        3.713888397003906,
                        3.7833456012655837,
                        3.8584014763645724,
                        3.944289069800835,
                        4.047564379490053,
                        4.166947743191069,
                        4.294675047669815,
                        4.426524726949361,
                        4.567008011106194,
                        4.722670986849075,
                        4.892452956329257,
                        5.068117089639057,
                        5.244347760010611,
                        5.425083116809463,
                        5.617515960780201,
                        5.821594819944147,
                        6.0289443048068145,
                        6.232698718065016,
                        6.435275132289408,
                        6.643850361130821,
                        6.859616202376208,
                        7.075074198804108,
                        7.28284908885772,
                        7.4841828748836425,
                        7.685831349510852,
                        7.889671483396264,
                        8.089034495870967,
                        8.276648663788862,
                        8.453422637918736,
                        8.62616934952033,
                        8.7972943917685,
                        8.96038528863436,
                        9.10779547460158,
                        9.24015789744673,
                        9.365006026068555,
                        9.486175073850157,
                        9.598072954073242,
                        9.692539523520358,
                        9.769231341294503,
                        9.835690188426563,
                        9.89696545339966,
                        9.948621143898569,
                        9.982481984066482,
                        9.99745820194592,
                        10.000954261658627,
                        9.99891525693683,
                        9.987786398051455,
                        9.959179361150818,
                        9.911081717587813,
                        9.850643420652764,
                        9.784756623851123,
                        9.710947819190451,
                        9.620737587534812,
                        9.511012400868655,
                        9.388250680527563,
                        9.2599765555159,
                        9.124875089658131,
                        8.974779317465577,
                        8.805830878580725,
                        8.623815043891888,
                        8.43649535752182,
                        8.243278882037455,
                        8.036217751812538,
                        7.811142470436553,
                        7.573965117124615,
                        7.333468090246215,
                        7.090009274004534,
                        6.835290805277142,
                        6.563778745676716,
                        6.280772782569031,
                        5.996367947335011,
                        5.7131763609679584,
                        5.423981654369061,
                        5.122374878750055,
                        4.812254772324127,
                        4.5036735208809136,
                        4.200706552123164,
                        3.8975498963307436,
                        3.58791165208873,
                        3.2749393894285714,
                        2.968304900132751,
                        2.672447104992518,
                        2.3819555910992056,
                        2.0904669859461515,
                        1.8011005292179532,
                        1.5241444478762596,
                        1.264772388162045,
                        1.0171971110193954,
                        0.7733529195178273,
                        0.5347818289746784,
                        0.3118618313176047,
                        0.11120092534346174,
                        -0.07216214923632538,
                        -0.24736598814977254,
                        -0.4149424256408669,
                        -0.5656684809316596,
                        -0.6925952535726103,
                        -0.8001763581244754,
                        -0.8982517549791836,
                        -0.9889122509584153,
                        -1.06387780562576,
                        -1.1159923181539446,
                        -1.1494516628863765,
                        -1.1749407760244366,
                        -1.1960530591355447,
                        -1.2051933106183481,
                        -1.1946027924235778,
                        -1.1678349316960845,
                        -1.136215828781594,
                        -1.1048488868329143,
                        -1.0668547191403988,
                        -1.0136760410804893,
                        -0.9477414437471579,
                        -0.8804414093593635,
                        -0.8179536171873907,
                        -0.7538738078387791,
                        -0.6786918013718759,
                        -0.5935649298220533,
                        -0.5098380134313629,
                        -0.4346869204709494,
                        -0.3619949351206326,
                        -0.28085756177355126,
                        -0.19058597903248803,
                        -0.10214928554503885,
                        -0.02390806576090767,
                        0.04943645812644677,
                        0.12980675587029838,
                        0.21984268939935583,
                        0.30936256307011634,
                        0.3890677067530527,
                        0.4632477270006619,
                        0.5443730688652366,
                        0.6366368607321429,
                        0.7304874101172848,
                        0.8156668113287155,
                        0.8953948412276873,
                        0.9825112597691124,
                        1.0824531475438508,
                        1.185848600937042,
                        1.2809606313576432,
                        1.3695883501018058,
                        1.4650076180040021,
                        1.5743192269956532,
                        1.6886509248196313,
                        1.7945569823219032,
                        1.8916879842176266,
                        1.9931010243918124,
                        2.1075211654290467,
                        2.227126748539521,
                        2.337374041795936,
                        2.435970005301657,
                        2.5355799707445135,
                        2.646383673551615,
                        2.761725890264267,
                        2.866328755962054,
                        2.9563760355791167,
                        3.0444968374082935,
                        3.1425699763384687,
                        3.2451840101938663,
                        3.336242042366149,
                        3.4103615226089214,
                        3.48042917231183,
                        3.560679876964679,
                        3.647559109963535,
                        3.7242425277261066,
                        3.783357328494235,
                        3.8376558333279873,
                        3.9038604284061638,
                        3.980782000862411,
                        4.051122736916638,
                        4.105134943083902,
                        4.154710486355051,
                        4.218591515176587,
                        4.297950921495956,
                        4.3751338271810045,
                        4.437863537790021,
                        4.496758209495114,
                        4.57215282754198,
                        4.66717701463518,
                        4.763242171505954,
                        4.8448072405992555,
                        4.920717639417924,
                        5.012941159630605,
                        5.126824805951224,
                        5.2426394869421005,
                        5.340713315143967,
                        5.427265639559198,
                        5.525858039917761,
                        5.644751108528641,
                        5.763579092057761,
                        5.8581962061628685,
                        5.9314429647172675,
                        6.008289335098835,
                        6.100587051037879,
                        6.188193197803891,
                        6.242867254692598,
                        6.264223607298402,
                        6.279278925893773,
                        6.304608230737779,
                        6.321071921588568,
                        6.296270901647467,
                        6.226440392231296,
                        6.141559614710103,
                        6.064857752770849,
                        5.979752521099758,
                        5.849893687214961,
                        5.667796401706101,
                        5.467019586520775,
                        5.279055534295082,
                        5.090853996456656,
                        4.861547599218231,
                        4.579335349270984,
                        4.282841977162967,
                        4.014771436336792,
                        3.7666477925322623,
                        3.4903703639185815,
                        3.1662536502533123,
                        2.838301744866953,
                        2.5648075273434165,
                        2.344607709140115,
                        2.1187755342716086,
                        1.8531694891461534,
                        1.5959311639675913,
                        1.4271347472113662,
                        1.3577018531343708,
                        1.311930228744258,
                        1.2291793821190802,
                        1.1597100938772236,
                        1.2196643511000802,
                        1.444677965086311,
                        1.7286946236760212,
                        1.9502588268513235,
                        2.150439776816263,
                        2.5278833091690682,
                        3.210211308283281,
                        4.043485132462959,
                        4.25,
                        4.5,
                        4.807005986876029
                    ]
            }
            )
            # use a generic scaled PA inflow

        else:
            inflow = pd.read_table(path, sep='\s+', header=None)
            if len(inflow.columns) == 2:
                # we have both flowrate and time in this file
                inflow.rename(columns={0: 't', 1: 'q'}, inplace=True)

                t_per = inflow.t.max()
            else:
                # we only have the flowrate and need to make the time array
                inflow.rename(columns={0: 'q'}, inplace=True)
                inflow['t'] = np.linspace(0, t_per, len(inflow.q))
            
            if flip_sign:
                inflow['q'] = inflow['q'] * -1
        
        q = inflow.q.to_list() * n_periods
        t = []
        for n in range(n_periods):
            t += [time + t_per * n for time in inflow.t.to_list()]
        
        
        return cls(q, t, t_per, n_periods, name)
    
    @classmethod
    def steady(cls, q, t_per=1.0, n_periods=1, n_tsteps=2, name="INFLOW"):
        '''
        create a steady inflow
        '''

        q = [q] * n_tsteps * n_periods
        t = np.linspace(0, t_per * n_periods, n_tsteps * n_periods)

        return cls(q, t.tolist(), t_per, n_periods, name)
    

    def rescale(self, cardiac_output=None, t_per=None, tsteps=None, scalar=None):
        '''
        rescale the inflow to a given cardiac output and period

        :param cardiac_output: the desired cardiac output in ml/s
        '''
        if cardiac_output is not None:
            curr_cardiac_output = trapz(self.period()[0], self.period()[1])
            scale_factor = cardiac_output / curr_cardiac_output
            self.q = [q * scale_factor for q in self.q]

        if tsteps is not None:

            # cubic spline interpolation
            interp_function = scipy.interpolate.interp1d(self.t, self.q, kind='cubic')

            self.n_tsteps = tsteps
            if t_per is not None:
                self.t = np.linspace(0, t_per, tsteps)
            else:
                self.t = np.linspace(0, self.t[-1], tsteps)

            self.q = interp_function(self.t)
            # self.q = scipy.signal.resample(self.q, tsteps)

        if t_per is not None:
            self.t_per = t_per
            self.t = np.linspace(0, t_per * self.n_periods, self.n_tsteps * self.n_periods)
        
        if scalar is not None:
            self.q = [q * scalar for q in self.q]
        
        if type(self.t) is np.ndarray:
            self.t = self.t.tolist()

    def add_steady_flow(self, q_steady):
        '''
        add a steady flow to the inflow

        :param q_steady: the steady flow rate in ml/s
        '''

        self.q = [q + q_steady for q in self.q]
        

    def plot(self, ax):
        '''
        plot the inflow
        '''
        ax.plot(self.t, self.q)
        ax.set_xlabel('time (s)')
        ax.set_ylabel('flow rate (ml/s)')
        ax.set_title('Inflow')
        ax.grid()


    def period(self):
        '''
        return one period of the inflow
        '''
        
        nt_period = self.n_tsteps // self.n_periods

        return self.q[:nt_period], self.t[:nt_period]

    def to_dict(self):
        '''
        return the inflow as a key-value pair
        '''
        if type(self.q) is np.ndarray:
            self.q = self.q.tolist()
        inflow_dict = {
            "bc_name": self.name,
            "bc_type": "FLOW",
            "bc_values": {
                "Q": self.q,
                "t": self.t
            }
        }

        return inflow_dict
    
    def to_bc(self):
        '''
        return the inflow as a BoundaryCondition object'''

        inflow_bc = BoundaryCondition(self.to_dict())

        return inflow_bc
    
    def to_df(self):
        '''
        return the inflow as a dataframe
        '''

        inflow_df = pd.DataFrame({'q': self.q, 't': self.t})

        return inflow_df
    
    def save(self, path):
        '''
        save the inflow to a file
        '''

        inflow_df = self.to_df()

        inflow_df.to_csv(path, index=False, sep='\t')
        
        print(f'Inflow saved to {path}')
    
    def cardiac_output(self):
        '''
        return the cardiac output of the flow waveform'''

        return trapz(self.period()[0], self.period()[1])

        


if __name__=='__main__':

    cardiac_output = float(sys.argv[1])
    t_per = float(sys.argv[2])
    patient = sys.argv[3]

    inflow = Inflow.periodic(path='../tests/cases/olufsen_impedance/inflow.flow')

    inflow.rescale(cardiac_output=cardiac_output, t_per=t_per)

    path = f'../../threed_models/flow-files/inflow_{patient}.csv'

    inflow.save(path)

    fig, ax = plt.subplots()
    inflow.plot(ax)
    plt.show()



    